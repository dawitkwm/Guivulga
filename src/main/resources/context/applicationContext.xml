<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
 	  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
      http://www.springframework.org/schema/rabbit
      http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder
		location="classpath:application.properties" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.codebus.domain" />
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="use_sql_comments">${use_sql_comments}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.import_files">populate.sql</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
	</bean>

	<!-- Scan for transaction-based resources -->
	<context:component-scan
		base-package="com.codebus" />
		
	<jpa:repositories base-package="com.codebus.repository" />

	<tx:annotation-driven
		transaction-manager="transactionManager" />
		
	<aop:aspectj-autoproxy />

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- *********** Connecting To RabbitMQ ***************** -->
	<rabbit:connection-factory
		id="connectionFactory" host="172.19.141.212" username="guest"
		password="guest" />
	
	<!-- <rabbit:connection-factory
		id="connectionFactory" host="mosquito.rmq.cloudamqp.com"
		virtual-host="zsunakgf" username="zsunakgf"
		password="usEOro2i-kvGHmWB2TIdMdv75eyE2JCn" /> -->
		
	<rabbit:admin connection-factory="connectionFactory" />


	<!-- *********** PRODUCER ***************** -->
	<rabbit:template id="mtsRabbitTemplate"
		connection-factory="connectionFactory" reply-timeout="5000" />
		
	<!-- **************** CONSUMER ************************* -->
	<rabbit:listener-container
		connection-factory="connectionFactory">
		<!-- <rabbit:listener ref="directQueueListener" method="listen"
			queue-names="usBankOneDirectQueue" />
		<rabbit:listener ref="directQueueListener" method="listen"
			queue-names="usBankTwoDirectQueue" /> -->
		<rabbit:listener ref="directQueueListener" method="listen"
			queue-names="mnBankOneDirectQueue" />
		<!-- <rabbit:listener ref="directQueueListener" method="listen"
			queue-names="etBankOneDirectQueue" /> -->
	</rabbit:listener-container>

	<bean id="directQueueListener" class="com.codebus.mts.MoneyTranserServiceImpl" />



</beans>
